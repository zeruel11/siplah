# This file is a template, and might need editing before it works on your project.
# Select image from https://hub.docker.com/_/php/
image: php:7.0.22

# Select what we should cache between builds
cache:
  paths:
  - vendor/
  - assets/

before_script:
- apt-get update -yqq
# Activate PHP modrewrite
#- a2enmod rewrite
#- systemctl restart apache2

# Bring in any services we need http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# See http://docs.gitlab.com/ce/ci/services/README.html for examples.
services:
  - mysql

# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE: siplah
  MYSQL_ROOT_PASSWORD: zeruel13

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
stages:
  - setup
  - test
  - deploy

setup:
  stage: setup
  script:
    # Extract mysql dump and store it as sql
    - apt-get install -yqq gzip
    - cd \(siplah\)
    - sql_input=$(ls -tp | grep full | head -1)
    - gunzip -c $sql_input > ../data_input.sql
  allow_failure: false
  artifacts:
    when: on_success
    paths:
      - ./data_input.sql
    expire_in: 2 hrs

testing:
  stage: test
  script:
    # Install PHP extensions
    - apt-get install -yqq git libmcrypt-dev libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev mysql-client
    - docker-php-ext-install mbstring mcrypt pdo_pgsql curl json intl gd xml zip bz2 opcache mysqli
    # Install & enable Xdebug for code coverage reports
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    # Install and satisfy Composer dependency
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
    # Install ci-phpunit-test (overwrites tests!!) - dump mysql - run phpunit
    - php vendor/kenjis/ci-phpunit-test/install.php
    - mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=mysql < data_input.sql
    - cd application/tests && ../../vendor/bin/phpunit
  dependencies:
    - setup
  artifacts:
    when: on_success
    paths:
      - application/tests/build
    expire_in: 15 days

pages:
  stage: deploy
  dependencies:
    - testing
  script:
    - mv application/tests/build/coverage public/
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master

# deploy_testing:
#   stage: test
#   script:
#     - echo "Deploy to staging server"
#     - phpunit
#   environment:
#     name: staging
#     # url: https://staging.example.com
#   only:
#   - master
